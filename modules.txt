Module 1: Map Data Parsing

This module, implemented in "readMap.c", is dedicated to reading and parsing map data from an input file. The parse_file function accepts a filename, reads its content line by line, extracts essential node and link information, and adjusts arrays to accommodate new entries. The parsed data is then appended to the respective arrays. After processing the entire file, the module writes the node and link data to an output file named "data.txt". This module ensures efficient and accurate data extraction for subsequent processing stages.

Module 2: Data Storage in Linked Lists

This module aims to read parsed data from "data.txt," generated by Module 1, and store it in linked list structures. Implemented in "storeData.c," it features two main functions: free_list and store_data. The free_list function deallocates memory for node and link linked lists, while store_data reads the input file, extracts relevant node and link details, and appends new nodes and links to their respective linked lists. This module ensures organized and efficient data storage for further processing.

Module 3: Map Visualization and Interaction

This module visualizes and interacts with map data, providing an intuitive representation of nodes and links. Utilizing the PROJ library for geographical coordinates and SDL for graphics, "visualizeMap.c" initializes SDL, creates a window and renderer, sets up PROJ for map projection, and transforms coordinates. It iterates through nodes and links, rendering them on the SDL window, while managing zooming and panning. Finally, it releases allocated resources for proper cleanup upon exit.

Module 4: Path Calculation and Backtracking (TBD)

This module calculates the shortest and fastest paths using Dijkstra's algorithm and iteratively backtracks through them. "pathCalculation.c" will include a Dijkstra implementation, which takes graph representation, start and end nodes, and a mode flag for shortest or fastest paths. It uses a priority queue for unvisited nodes and updates distances/times and parent pointers. Another function backtracks from the end node using parent pointers, returning the path as a list of nodes to be traversed.

Module 5: Main Function and Integration (TBD)

The "main.c" file integrates all previous modules to create a complete application. It imports necessary headers/libraries, checks command-line arguments, and calls functions from Modules 1-3 to parse map data, store it in linked lists, and visualize the map. Future additions include integrating path calculation from Module 4 to display shortest/fastest paths using Dijkstra's algorithm and backtracking. The visualization will be updated to show calculated paths and additional information. Lastly, it frees allocated memory to prevent leaks.